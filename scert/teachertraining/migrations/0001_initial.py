# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-05 06:51
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import teachertraining.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Postrequisite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Prerequisite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('empId', models.IntegerField(unique=True)),
                ('aadhar_no', models.IntegerField(unique=True)),
                ('age', models.IntegerField()),
                ('joining_date', models.DateField(verbose_name='joining date')),
                ('last_promotion_date', models.DateField(verbose_name='last promotion date')),
                ('subject', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=200)),
                ('phone', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('duration', models.IntegerField()),
                ('type_of_training', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start_date', models.DateField(verbose_name='training plan start date')),
                ('end_date', models.DateField(verbose_name='training plan end date')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPlanDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fundingSource', models.CharField(choices=[('FS1', 'FundSource1'), ('FS2', 'FundSource2'), ('FS3', 'FundSource3'), ('FS4', 'FundSource4')], default='FS1', max_length=3)),
                ('start_date', models.DateField(verbose_name='training start date')),
                ('end_date', models.DateField(verbose_name='training end date')),
                ('traingId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.Training')),
                ('traininPlanId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.TrainingPlan')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPlanEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainingStatus', models.CharField(choices=[('NOMINATED', 'Nominated'), ('REGISTRATIONDONE', 'RegistrationDone'), ('PRE-REQUISITE', 'PreTrainingRequisite'), ('MAINTRAINING', 'MainTraining'), ('POST-REQUISITE', 'PostTrainingRequisite'), ('COMPLETE', 'Complete'), ('DISQUALIFIED', 'Disqualified')], default='NOMINATED', max_length=16)),
                ('TrainingPrerequisiteStatus', models.CharField(choices=[('INITIAL', 'Initial'), ('SUBMITTED', 'Submitted'), ('APPROVED', 'Approved')], default='INITIAL', max_length=9)),
                ('TrainingPostrequisiteStatus', models.CharField(choices=[('INITIAL', 'Initial'), ('SUBMITTED', 'Submitted'), ('APPROVED', 'Approved')], default='INITIAL', max_length=9)),
                ('teacherId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.Teacher')),
                ('trainingPlanDetailId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.TrainingPlanDetail')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPostrequisiteComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPostrequisiteStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=teachertraining.models.user_directory_path_post)),
                ('TrainingPostrequisiteId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.Postrequisite')),
                ('TrainingStatusId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.TrainingPlanEnrollment')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPrerequisiteComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPrerequisiteStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=teachertraining.models.user_directory_path)),
                ('TrainingPrerequisiteId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.Prerequisite')),
                ('TrainingStatusId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.TrainingPlanEnrollment')),
            ],
        ),
        migrations.AddField(
            model_name='trainingprerequisitecomments',
            name='TrainingPrerequisiteStatusId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.TrainingPrerequisiteStatus'),
        ),
        migrations.AddField(
            model_name='trainingpostrequisitecomments',
            name='TrainingPostrequisiteStatusId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.TrainingPostrequisiteStatus'),
        ),
        migrations.AddField(
            model_name='prerequisite',
            name='TrainingId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.Training'),
        ),
        migrations.AddField(
            model_name='postrequisite',
            name='TrainingId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachertraining.Training'),
        ),
        migrations.AlterUniqueTogether(
            name='trainingplanenrollment',
            unique_together=set([('teacherId', 'trainingPlanDetailId')]),
        ),
    ]
